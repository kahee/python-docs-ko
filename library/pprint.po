# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-26 11:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../Doc/library/pprint.rst:2
msgid ":mod:`pprint` --- Data pretty printer"
msgstr ":mod:`pprint` --- 예쁜 데이터 인쇄기"

#: ../Doc/library/pprint.rst:10
msgid "**Source code:** :source:`Lib/pprint.py`"
msgstr "**소스 코드:** :source:`Lib/pprint.py`"

#: ../Doc/library/pprint.rst:14
msgid ""
"The :mod:`pprint` module provides a capability to \"pretty-print\" "
"arbitrary Python data structures in a form which can be used as input to "
"the interpreter. If the formatted structures include objects which are "
"not fundamental Python types, the representation may not be loadable.  "
"This may be the case if objects such as files, sockets or classes are "
"included, as well as many other objects which are not representable as "
"Python literals."
msgstr ""
":mod:`pprint` 모듈은 임의의 파이썬 데이터 구조를 인터프리터의 입력으로 사용할 수 있는 형태로 \"예쁘게 인쇄\"할 수 있는 "
"기능을 제공합니다. 포맷된 구조에 기본 파이썬 형이 아닌 객체가 포함되면, 표현은 로드되지 않을 수 있습니다. 파일, 소켓 또는 클래스와"
" 같은 객체뿐만 아니라 파이썬 리터럴로 표현할 수 없는 다른 많은 객체가 포함된 경우입니다."

#: ../Doc/library/pprint.rst:21
msgid ""
"The formatted representation keeps objects on a single line if it can, "
"and breaks them onto multiple lines if they don't fit within the allowed "
"width. Construct :class:`PrettyPrinter` objects explicitly if you need to"
" adjust the width constraint."
msgstr ""
"포맷된 표현은 할 수 있다면 객체를 한 줄에 유지하고, 허용된 너비에 맞지 않으면 여러 줄로 나눕니다. 너비 제한을 조정해야 하면 "
":class:`PrettyPrinter` 객체를 명시적으로 만드십시오."

#: ../Doc/library/pprint.rst:26
msgid "Dictionaries are sorted by key before the display is computed."
msgstr "딕셔너리는 디스플레이를 계산하기 전에 키로 정렬됩니다."

#: ../Doc/library/pprint.rst:28
msgid "The :mod:`pprint` module defines one class:"
msgstr ":mod:`pprint` 모듈은 하나의 클래스를 정의합니다:"

#: ../Doc/library/pprint.rst:36
msgid ""
"Construct a :class:`PrettyPrinter` instance.  This constructor "
"understands several keyword parameters.  An output stream may be set "
"using the *stream* keyword; the only method used on the stream object is "
"the file protocol's :meth:`write` method.  If not specified, the "
":class:`PrettyPrinter` adopts ``sys.stdout``.  The amount of indentation "
"added for each recursive level is specified by *indent*; the default is "
"one.  Other values can cause output to look a little odd, but can make "
"nesting easier to spot.  The number of levels which may be printed is "
"controlled by *depth*; if the data structure being printed is too deep, "
"the next contained level is replaced by ``...``.  By default, there is no"
" constraint on the depth of the objects being formatted.  The desired "
"output width is constrained using the *width* parameter; the default is "
"80 characters.  If a structure cannot be formatted within the constrained"
" width, a best effort will be made.  If *compact* is false (the default) "
"each item of a long sequence will be formatted on a separate line.  If "
"*compact* is true, as many items as will fit within the *width* will be "
"formatted on each output line."
msgstr ""
":class:`PrettyPrinter` 인스턴스를 만듭니다. 이 생성자는 여러 키워드 매개 변수를 인식합니다. 출력 스트림은 "
"*stream* 키워드를 사용하여 설정할 수 있습니다; 스트림 객체에서 사용되는 유일한 메서드는 파일 프로토콜의 :meth:`write`"
" 메서드입니다. 지정하지 않으면, :class:`PrettyPrinter`\\는 ``sys.stdout``\\을 사용합니다. 각 재귀 "
"수준에 대해 들여쓰기하는 양은 *indent*\\로 지정합니다; 기본값은 1입니다. 다른 값은 출력이 약간 이상하게 보일 수 있지만, "
"중첩을 쉽게 알아낼 수 있습니다. 인쇄될 수 있는 수준의 수는 *depth*\\로 제어합니다; 인쇄 중인 데이터 구조가 너무 깊으면, "
"다음에 포함된 수준은 ``...``\\로 대체됩니다. 기본적으로, 포맷되는 객체의 깊이에는 제한이 없습니다. 원하는 출력 폭은 "
"*width* 매개 변수를 사용하여 제한합니다; 기본값은 80자입니다. 제한된 너비 내에서 구조를 포맷할 수 없으면, 최선의 노력을 "
"기울입니다. *compact*\\가 거짓(기본값)이면, 긴 시퀀스의 각 항목이 별도의 줄로 포맷됩니다. *compact*\\가 참이면 "
"*width* 내에 들어갈 수 있는 최대한 많은 항목을 각 출력할 줄에 포맷합니다."

#: ../Doc/library/pprint.rst:53 ../Doc/library/pprint.rst:88
#: ../Doc/library/pprint.rst:102
msgid "Added the *compact* parameter."
msgstr "*compact* 매개 변수가 추가되었습니다."

#: ../Doc/library/pprint.rst:80
msgid "The :mod:`pprint` module also provides several shortcut functions:"
msgstr ":mod:`pprint` 모듈은 몇 가지 단축 함수도 제공합니다:"

#: ../Doc/library/pprint.rst:84
msgid ""
"Return the formatted representation of *object* as a string.  *indent*, "
"*width*, *depth* and *compact* will be passed to the "
":class:`PrettyPrinter` constructor as formatting parameters."
msgstr ""
"*object*\\의 포맷된 표현을 문자열로 반환합니다. *indent*, *width*, *depth* 및 *compact*\\는 "
"포매팅 매개 변수로 :class:`PrettyPrinter` 생성자에 전달됩니다."

#: ../Doc/library/pprint.rst:95
msgid ""
"Prints the formatted representation of *object* on *stream*, followed by "
"a newline.  If *stream* is ``None``, ``sys.stdout`` is used.  This may be"
" used in the interactive interpreter instead of the :func:`print` "
"function for inspecting values (you can even reassign ``print = "
"pprint.pprint`` for use within a scope).  *indent*, *width*, *depth* and "
"*compact* will be passed to the :class:`PrettyPrinter` constructor as "
"formatting parameters."
msgstr ""
"*object*\\의 포맷된 표현에 줄 바꿈을 추가해서 *stream*\\에 인쇄합니다. *stream*\\이 ``None``\\이면, "
"``sys.stdout``\\이 사용됩니다. 이것은 :func:`print` 함수 대신 대화형 인터프리터에서 값을 검사하는 데 사용할 수"
" 있습니다 (스코프 내에서 사용하기 위해 ``print = pprint.pprint``\\를 다시 대입할 수도 있습니다). "
"*indent*, *width*, *depth* 및 *compact*\\는 포매팅 매개 변수로 :class:`PrettyPrinter` "
"생성자에 전달됩니다."

#: ../Doc/library/pprint.rst:121
msgid ""
"Determine if the formatted representation of *object* is \"readable,\" or"
" can be used to reconstruct the value using :func:`eval`.  This always "
"returns ``False`` for recursive objects."
msgstr ""
"*object*\\의 포맷된 표현이 \"읽을 수 있는\"지, 즉 :func:`eval`\\을 사용하여 값을 재구성하는 데 사용할 수 "
"있는지 판단합니다. 재귀적 객체에 대해서는 항상 ``False``\\를 반환합니다."

#: ../Doc/library/pprint.rst:131
msgid "Determine if *object* requires a recursive representation."
msgstr "*object*\\가 재귀적 표현을 요구하는지 판단합니다."

#: ../Doc/library/pprint.rst:134
msgid "One more support function is also defined:"
msgstr "또 하나의 지원 함수가 정의됩니다:"

#: ../Doc/library/pprint.rst:138
msgid ""
"Return a string representation of *object*, protected against recursive "
"data structures.  If the representation of *object* exposes a recursive "
"entry, the recursive reference will be represented as ``<Recursion on "
"typename with id=number>``.  The representation is not otherwise "
"formatted."
msgstr ""
"재귀적 데이터 구조에 대해 보호되는, *object*\\의 문자열 표현을 반환합니다. *object*\\의 표현이 재귀적 항목을 "
"노출하면, 재귀적 참조는 ``<Recursion on typename with id=number>``\\로 표시됩니다. 표현에는 이외의 "
"다른 포매팅이 적용되지 않습니다."

#: ../Doc/library/pprint.rst:150
msgid "PrettyPrinter Objects"
msgstr "PrettyPrinter 객체"

#: ../Doc/library/pprint.rst:152
msgid ":class:`PrettyPrinter` instances have the following methods:"
msgstr ":class:`PrettyPrinter` 인스턴스에는 다음과 같은 메서드가 있습니다:"

#: ../Doc/library/pprint.rst:157
msgid ""
"Return the formatted representation of *object*.  This takes into account"
" the options passed to the :class:`PrettyPrinter` constructor."
msgstr "*object*\\의 포맷된 표현을 반환합니다. :class:`PrettyPrinter` 생성자에 전달된 옵션을 고려합니다."

#: ../Doc/library/pprint.rst:163
msgid ""
"Print the formatted representation of *object* on the configured stream, "
"followed by a newline."
msgstr "구성된 스트림에 *object*\\의 포맷된 표현과 불 넘김을 인쇄합니다."

#: ../Doc/library/pprint.rst:166
msgid ""
"The following methods provide the implementations for the corresponding "
"functions of the same names.  Using these methods on an instance is "
"slightly more efficient since new :class:`PrettyPrinter` objects don't "
"need to be created."
msgstr ""
"다음 메서드는 같은 이름의 해당 함수에 대한 구현을 제공합니다. 새로운 :class:`PrettyPrinter` 객체를 만들 필요가 "
"없으므로, 인스턴스에서 이러한 메서드를 사용하는 것이 약간 더 효율적입니다."

#: ../Doc/library/pprint.rst:176
msgid ""
"Determine if the formatted representation of the object is \"readable,\" "
"or can be used to reconstruct the value using :func:`eval`.  Note that "
"this returns ``False`` for recursive objects.  If the *depth* parameter "
"of the :class:`PrettyPrinter` is set and the object is deeper than "
"allowed, this returns ``False``."
msgstr ""
"object의 포맷된 표현이 \"읽을 수 있는\"지, 즉 :func:`eval`\\을 사용하여 값을 재구성하는 데 사용할 수 있는지 "
"판단합니다. 재귀 객체에 대해 ``False``\\를 반환함에 유의하십시오. :class:`PrettyPrinter`\\의 *depth*"
" 매개 변수가 설정되고 객체가 허용된 것보다 더 깊으면, ``False``\\를 반환합니다."

#: ../Doc/library/pprint.rst:185
msgid "Determine if the object requires a recursive representation."
msgstr "object가 재귀적 표현을 요구하는지 판단합니다."

#: ../Doc/library/pprint.rst:187
msgid ""
"This method is provided as a hook to allow subclasses to modify the way "
"objects are converted to strings.  The default implementation uses the "
"internals of the :func:`saferepr` implementation."
msgstr ""
"이 메서드는 서브 클래스가 객체가 문자열로 변환되는 방식을 수정할 수 있도록 하는 훅으로 제공됩니다. 기본 구현은 "
":func:`saferepr` 구현의 내부를 사용합니다."

#: ../Doc/library/pprint.rst:194
msgid ""
"Returns three values: the formatted version of *object* as a string, a "
"flag indicating whether the result is readable, and a flag indicating "
"whether recursion was detected.  The first argument is the object to be "
"presented.  The second is a dictionary which contains the :func:`id` of "
"objects that are part of the current presentation context (direct and "
"indirect containers for *object* that are affecting the presentation) as "
"the keys; if an object needs to be presented which is already represented"
" in *context*, the third return value should be ``True``.  Recursive "
"calls to the :meth:`.format` method should add additional entries for "
"containers to this dictionary.  The third argument, *maxlevels*, gives "
"the requested limit to recursion; this will be ``0`` if there is no "
"requested limit.  This argument should be passed unmodified to recursive "
"calls. The fourth argument, *level*, gives the current level; recursive "
"calls should be passed a value less than that of the current call."
msgstr ""
"세 가지 값을 반환합니다: 포맷된 버전의 *object*\\를 문자열로, 결과가 읽을 수 있는지를 나타내는 플래그와 재귀가 감지되었는지를"
" 나타내는 플래그. 첫 번째 인자는 표시할 객체입니다. 두 번째는 현재 표현 컨텍스트(표현에 영향을 주는 *object*\\의 직접 및 "
"간접 컨테이너)의 일부인 객체의 :func:`id`\\를 키로 포함하는 딕셔너리입니다; 이미 *context*\\에 표현된 객체가 "
"표현되어야 할 필요가 있으면, 세 번째 반환 값은 ``True``\\이어야 합니다. :meth:`.format` 메서드에 대한 재귀 "
"호출은 컨테이너에 대한 추가 항목을 이 딕셔너리에 추가해야 합니다. 세 번째 인자 *maxlevels*\\는 재귀에 요청된 제한을 "
"줍니다; 요청된 제한이 없으면 ``0``\\입니다. 이 인자는 재귀 호출에 수정되지 않은 채 전달되어야 합니다. 네 번째 인자 "
"*level*\\은 현재 수준을 제공합니다; 재귀 호출은 현재 호출보다 작은 값으로 전달되어야 합니다."

#: ../Doc/library/pprint.rst:212
msgid "Example"
msgstr "예제"

#: ../Doc/library/pprint.rst:214
msgid ""
"To demonstrate several uses of the :func:`pprint` function and its "
"parameters, let's fetch information about a project from `PyPI "
"<https://pypi.org>`_::"
msgstr ""
":func:`pprint` 함수와 매개 변수의 여러 용도를 예시하기 위해, `PyPI <https://pypi.org>`_\\에서 "
"프로젝트에 대한 정보를 가져옵시다::"

#: ../Doc/library/pprint.rst:225
msgid "In its basic form, :func:`pprint` shows the whole object::"
msgstr "기본적인 형태에서, :func:`pprint`\\는 전체 객체를 보여줍니다::"

#: ../Doc/library/pprint.rst:279
msgid ""
"The result can be limited to a certain *depth* (ellipsis is used for "
"deeper contents)::"
msgstr "결과는 특정 *depth*\\로 제한될 수 있습니다 (더 깊은 내용에는 줄임표가 사용됩니다)::"

#: ../Doc/library/pprint.rst:313
msgid ""
"Additionally, maximum character *width* can be suggested. If a long "
"object cannot be split, the specified width will be exceeded::"
msgstr "또한, 최대 문자 *width*\\를 제안할 수 있습니다. 긴 객체를 분할 할 수 없으면, 지정된 너비를 초과합니다::"
