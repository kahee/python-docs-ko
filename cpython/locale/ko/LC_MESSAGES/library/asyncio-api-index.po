# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-23 06:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../Doc/library/asyncio-api-index.rst:6
msgid "High-level API Index"
msgstr "고수준 API 색인"

#: ../Doc/library/asyncio-api-index.rst:8
msgid "This page lists all high-level async/await enabled asyncio APIs."
msgstr "이 페이지에는 모든 고수준의 async/await 활성화된 asyncio API가 나열됩니다."

#: ../Doc/library/asyncio-api-index.rst:12
msgid "Tasks"
msgstr "태스크"

#: ../Doc/library/asyncio-api-index.rst:14
msgid ""
"Utilities to run asyncio programs, create Tasks, and await on multiple "
"things with timeouts."
msgstr "asyncio 프로그램을 실행하고, 태스크를 만들고, 시간제한 있게 여러 가지를 기다리는 유틸리티."

#: ../Doc/library/asyncio-api-index.rst:21
msgid ":func:`run`"
msgstr ":func:`run`"

#: ../Doc/library/asyncio-api-index.rst:22
msgid "Create event loop, run a coroutine, close the loop."
msgstr "이벤트 루프를 만들고, 코루틴을 실행하고, 루프를 닫습니다."

#: ../Doc/library/asyncio-api-index.rst:24
msgid ":func:`create_task`"
msgstr ":func:`create_task`"

#: ../Doc/library/asyncio-api-index.rst:25
msgid "Start an asyncio Task."
msgstr "asyncio Task를 시작합니다."

#: ../Doc/library/asyncio-api-index.rst:27
msgid "``await`` :func:`sleep`"
msgstr "``await`` :func:`sleep`"

#: ../Doc/library/asyncio-api-index.rst:28
msgid "Sleep for a number of seconds."
msgstr "몇 초 동안 잠잡니다."

#: ../Doc/library/asyncio-api-index.rst:30
msgid "``await`` :func:`gather`"
msgstr "``await`` :func:`gather`"

#: ../Doc/library/asyncio-api-index.rst:31
msgid "Schedule and wait for things concurrently."
msgstr "여러 가지를 동시에 예약하고 기다립니다."

#: ../Doc/library/asyncio-api-index.rst:33
msgid "``await`` :func:`wait_for`"
msgstr "``await`` :func:`wait_for`"

#: ../Doc/library/asyncio-api-index.rst:34
msgid "Run with a timeout."
msgstr "시간제한 있게 실행합니다."

#: ../Doc/library/asyncio-api-index.rst:36
msgid "``await`` :func:`shield`"
msgstr "``await`` :func:`shield`"

#: ../Doc/library/asyncio-api-index.rst:37
msgid "Shield from cancellation."
msgstr "취소로부터 보호합니다."

#: ../Doc/library/asyncio-api-index.rst:39
msgid "``await`` :func:`wait`"
msgstr "``await`` :func:`wait`"

#: ../Doc/library/asyncio-api-index.rst:40
msgid "Monitor for completion."
msgstr "완료를 감시합니다."

#: ../Doc/library/asyncio-api-index.rst:42
msgid ":func:`current_task`"
msgstr ":func:`current_task`"

#: ../Doc/library/asyncio-api-index.rst:43
msgid "Return the current Task."
msgstr "현재 Task를 돌려줍니다."

#: ../Doc/library/asyncio-api-index.rst:45
msgid ":func:`all_tasks`"
msgstr ":func:`all_tasks`"

#: ../Doc/library/asyncio-api-index.rst:46
msgid "Return all tasks for an event loop."
msgstr "이벤트 루프의 모든 태스크를 반환합니다."

#: ../Doc/library/asyncio-api-index.rst:48
msgid ":class:`Task`"
msgstr ":class:`Task`"

#: ../Doc/library/asyncio-api-index.rst:49
msgid "Task object."
msgstr "Task 객체."

#: ../Doc/library/asyncio-api-index.rst:51
msgid ":func:`run_coroutine_threadsafe`"
msgstr ":func:`run_coroutine_threadsafe`"

#: ../Doc/library/asyncio-api-index.rst:52
msgid "Schedule a coroutine from another OS thread."
msgstr "다른 OS 스레드에서 코루틴을 예약합니다."

#: ../Doc/library/asyncio-api-index.rst:54
msgid "``for in`` :func:`as_completed`"
msgstr "``for in`` :func:`as_completed`"

#: ../Doc/library/asyncio-api-index.rst:55
msgid "Monitor for completion with a ``for`` loop."
msgstr "``for`` 루프로 완료를 감시합니다."

#: ../Doc/library/asyncio-api-index.rst:59
#: ../Doc/library/asyncio-api-index.rst:95
#: ../Doc/library/asyncio-api-index.rst:119
#: ../Doc/library/asyncio-api-index.rst:155
#: ../Doc/library/asyncio-api-index.rst:188
#: ../Doc/library/asyncio-api-index.rst:213
msgid "Examples"
msgstr "예제"

#: ../Doc/library/asyncio-api-index.rst:60
msgid ""
":ref:`Using asyncio.gather() to run things in parallel "
"<asyncio_example_gather>`."
msgstr ""
":ref:`여러 가지를 병렬로 실행하기 위해 asyncio.gather() 사용하기 <asyncio_example_gather>`."

#: ../Doc/library/asyncio-api-index.rst:63
msgid ""
":ref:`Using asyncio.wait_for() to enforce a timeout "
"<asyncio_example_waitfor>`."
msgstr ":ref:`시간제한을 주기 위해 asyncio.wait_for() 사용하기 <asyncio_example_waitfor>`."

#: ../Doc/library/asyncio-api-index.rst:66
msgid ":ref:`Cancellation <asyncio_example_task_cancel>`."
msgstr ":ref:`취소 <asyncio_example_task_cancel>`."

#: ../Doc/library/asyncio-api-index.rst:68
msgid ":ref:`Using asyncio.sleep() <asyncio_example_sleep>`."
msgstr ":ref:`asyncio.sleep() 사용하기 <asyncio_example_sleep>`."

#: ../Doc/library/asyncio-api-index.rst:70
msgid "See also the main :ref:`Tasks documentation page <coroutine>`."
msgstr "주 :ref:`태스크 설명서 페이지 <coroutine>`\\를 참조하십시오."

#: ../Doc/library/asyncio-api-index.rst:74
msgid "Queues"
msgstr "큐"

#: ../Doc/library/asyncio-api-index.rst:76
msgid ""
"Queues should be used to distribute work amongst multiple asyncio Tasks, "
"implement connection pools, and pub/sub patterns."
msgstr "큐는 여러 asyncio 태스크 간에 작업을 분산하고, 연결 풀과 pub/sub 패턴을 구현하는 데 사용해야 합니다."

#: ../Doc/library/asyncio-api-index.rst:84
msgid ":class:`Queue`"
msgstr ":class:`Queue`"

#: ../Doc/library/asyncio-api-index.rst:85
msgid "A FIFO queue."
msgstr "FIFO 큐."

#: ../Doc/library/asyncio-api-index.rst:87
msgid ":class:`PriorityQueue`"
msgstr ":class:`PriorityQueue`"

#: ../Doc/library/asyncio-api-index.rst:88
msgid "A priority queue."
msgstr "우선순위 큐."

#: ../Doc/library/asyncio-api-index.rst:90
msgid ":class:`LifoQueue`"
msgstr ":class:`LifoQueue`"

#: ../Doc/library/asyncio-api-index.rst:91
msgid "A LIFO queue."
msgstr "LIFO 큐."

#: ../Doc/library/asyncio-api-index.rst:96
msgid ""
":ref:`Using asyncio.Queue to distribute workload between several Tasks "
"<asyncio_example_queue_dist>`."
msgstr ""
":ref:`여러 태스크로 작업부하를 분산하는데 asyncio.Queue 사용하기 <asyncio_example_queue_dist>`."

#: ../Doc/library/asyncio-api-index.rst:99
msgid "See also the :ref:`Queues documentation page <asyncio-queues>`."
msgstr ":ref:`큐 설명서 페이지 <asyncio-queues>`\\도 참조하십시오."

#: ../Doc/library/asyncio-api-index.rst:103
msgid "Subprocesses"
msgstr "서브 프로세스"

#: ../Doc/library/asyncio-api-index.rst:105
msgid "Utilities to spawn subprocesses and run shell commands."
msgstr "서브 프로세스를 생성하고 셸 명령을 실행하는 유틸리티."

#: ../Doc/library/asyncio-api-index.rst:111
msgid "``await`` :func:`create_subprocess_exec`"
msgstr "``await`` :func:`create_subprocess_exec`"

#: ../Doc/library/asyncio-api-index.rst:112
msgid "Create a subprocess."
msgstr "서브 프로세스를 만듭니다."

#: ../Doc/library/asyncio-api-index.rst:114
msgid "``await`` :func:`create_subprocess_shell`"
msgstr "``await`` :func:`create_subprocess_shell`"

#: ../Doc/library/asyncio-api-index.rst:115
msgid "Run a shell command."
msgstr "셸 명령을 실행합니다."

#: ../Doc/library/asyncio-api-index.rst:120
msgid ":ref:`Executing a shell command <asyncio_example_subprocess_shell>`."
msgstr ":ref:`셸 명령 실행하기 <asyncio_example_subprocess_shell>`."

#: ../Doc/library/asyncio-api-index.rst:122
msgid "See also the :ref:`subprocess APIs <asyncio-subprocess>` documentation."
msgstr ":ref:`서브 프로세스 API <asyncio-subprocess>` 설명서도 참조하십시오."

#: ../Doc/library/asyncio-api-index.rst:127
msgid "Streams"
msgstr "스트림"

#: ../Doc/library/asyncio-api-index.rst:129
msgid "High-level APIs to work with network IO."
msgstr "네트워크 IO로 작업하는 고수준 API"

#: ../Doc/library/asyncio-api-index.rst:135
msgid "``await`` :func:`open_connection`"
msgstr "``await`` :func:`open_connection`"

#: ../Doc/library/asyncio-api-index.rst:136
msgid "Establish a TCP connection."
msgstr "TCP 연결을 만듭니다."

#: ../Doc/library/asyncio-api-index.rst:138
msgid "``await`` :func:`open_unix_connection`"
msgstr "``await`` :func:`open_unix_connection`"

#: ../Doc/library/asyncio-api-index.rst:139
msgid "Establish a Unix socket connection."
msgstr "유닉스 소켓 연결을 만듭니다."

#: ../Doc/library/asyncio-api-index.rst:141
msgid "``await`` :func:`start_server`"
msgstr "``await`` :func:`start_server`"

#: ../Doc/library/asyncio-api-index.rst:142
msgid "Start a TCP server."
msgstr "TCP 서버를 시작합니다."

#: ../Doc/library/asyncio-api-index.rst:144
msgid "``await`` :func:`start_unix_server`"
msgstr "``await`` :func:`start_unix_server`"

#: ../Doc/library/asyncio-api-index.rst:145
msgid "Start a Unix socket server."
msgstr "유닉스 소켓 서버를 시작합니다."

#: ../Doc/library/asyncio-api-index.rst:147
msgid ":class:`StreamReader`"
msgstr ":class:`StreamReader`"

#: ../Doc/library/asyncio-api-index.rst:148
msgid "High-level async/await object to receive network data."
msgstr "네트워크 데이터를 수신하는 고수준 async/await 객체."

#: ../Doc/library/asyncio-api-index.rst:150
msgid ":class:`StreamWriter`"
msgstr ":class:`StreamWriter`"

#: ../Doc/library/asyncio-api-index.rst:151
msgid "High-level async/await object to send network data."
msgstr "네트워크 데이터를 보내는 고수준 async/await 객체."

#: ../Doc/library/asyncio-api-index.rst:156
msgid ":ref:`Example TCP client <asyncio_example_stream>`."
msgstr ":ref:`예제 TCP 클라이언트 <asyncio_example_stream>`."

#: ../Doc/library/asyncio-api-index.rst:158
msgid "See also the :ref:`streams APIs <asyncio-streams>` documentation."
msgstr ":ref:`스트림 API <asyncio-streams>` 설명서도 참조하십시오."

#: ../Doc/library/asyncio-api-index.rst:163
msgid "Synchronization"
msgstr "동기화"

#: ../Doc/library/asyncio-api-index.rst:165
msgid "Threading-like synchronization primitives that can be used in Tasks."
msgstr "태스크에 쓸 수 있는 threading과 유사한 동기화 프리미티브."

#: ../Doc/library/asyncio-api-index.rst:171
msgid ":class:`Lock`"
msgstr ":class:`Lock`"

#: ../Doc/library/asyncio-api-index.rst:172
msgid "A mutex lock."
msgstr "뮤텍스 록."

#: ../Doc/library/asyncio-api-index.rst:174
msgid ":class:`Event`"
msgstr ":class:`Event`"

#: ../Doc/library/asyncio-api-index.rst:175
msgid "An event object."
msgstr "이벤트 객체."

#: ../Doc/library/asyncio-api-index.rst:177
msgid ":class:`Condition`"
msgstr ":class:`Condition`"

#: ../Doc/library/asyncio-api-index.rst:178
msgid "A condition object."
msgstr "조건 객체."

#: ../Doc/library/asyncio-api-index.rst:180
msgid ":class:`Semaphore`"
msgstr ":class:`Semaphore`"

#: ../Doc/library/asyncio-api-index.rst:181
msgid "A semaphore."
msgstr "세마포어."

#: ../Doc/library/asyncio-api-index.rst:183
msgid ":class:`BoundedSemaphore`"
msgstr ":class:`BoundedSemaphore`"

#: ../Doc/library/asyncio-api-index.rst:184
msgid "A bounded semaphore."
msgstr "제한된 세마포어."

#: ../Doc/library/asyncio-api-index.rst:189
msgid ":ref:`Using asyncio.Event <asyncio_example_sync_event>`."
msgstr ":ref:`asyncio.Event 사용하기 <asyncio_example_sync_event>`."

#: ../Doc/library/asyncio-api-index.rst:191
msgid ""
"See also the documentation of asyncio :ref:`synchronization primitives "
"<asyncio-sync>`."
msgstr "asyncio :ref:`동기화 프리미티브 <asyncio-sync>`\\의 설명서도 참조하십시오."

#: ../Doc/library/asyncio-api-index.rst:196
msgid "Exceptions"
msgstr "예외"

#: ../Doc/library/asyncio-api-index.rst:203
msgid ":exc:`asyncio.TimeoutError`"
msgstr ":exc:`asyncio.TimeoutError`"

#: ../Doc/library/asyncio-api-index.rst:204
msgid ""
"Raised on timeout by functions like :func:`wait_for`. Keep in mind that "
"``asyncio.TimeoutError`` is **unrelated** to the built-in "
":exc:`TimeoutError` exception."
msgstr ""
":func:`wait_for`\\와 같은 함수에서 시간 초과 시 발생합니다. ``asyncio.TimeoutError``\\는 내장 "
":exc:`TimeoutError` 예외와 **관련이 없음**\\에 유의하세요."

#: ../Doc/library/asyncio-api-index.rst:208
msgid ":exc:`asyncio.CancelledError`"
msgstr ":exc:`asyncio.CancelledError`"

#: ../Doc/library/asyncio-api-index.rst:209
msgid "Raised when a Task is cancelled. See also :meth:`Task.cancel`."
msgstr "Task가 취소될 때 발생합니다. :meth:`Task.cancel`\\도 참조하십시오."

#: ../Doc/library/asyncio-api-index.rst:214
msgid ""
":ref:`Handling CancelledError to run code on cancellation request "
"<asyncio_example_task_cancel>`."
msgstr ""
":ref:`취소 요청 시에 코드를 실행하기 위해 CancelledError 처리하기 "
"<asyncio_example_task_cancel>`."

#: ../Doc/library/asyncio-api-index.rst:217
msgid ""
"See also the full list of :ref:`asyncio-specific exceptions <asyncio-"
"exceptions>`."
msgstr ":ref:`asyncio 전용 예외 <asyncio-exceptions>`\\의 전체 목록도 참조하십시오."
