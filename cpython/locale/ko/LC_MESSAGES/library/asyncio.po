# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-12-25 10:27+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../Doc/library/asyncio.rst:2
msgid ":mod:`asyncio` --- Asynchronous I/O"
msgstr ":mod:`asyncio` --- 비동기 I/O"

msgid "Hello World!"
msgstr "Hello World!"

#: ../Doc/library/asyncio.rst:23
msgid ""
"asyncio is a library to write **concurrent** code using the "
"**async/await** syntax."
msgstr "asyncio는 **async/await** 구문을 사용하여 **동시성** 코드를 작성하는 라이브러리입니다."

#: ../Doc/library/asyncio.rst:26
msgid ""
"asyncio is used as a foundation for multiple Python asynchronous "
"frameworks that provide high-performance network and web-servers, "
"database connection libraries, distributed task queues, etc."
msgstr ""
"asyncio는 고성능 네트워크 및 웹 서버, 데이터베이스 연결 라이브러리, 분산 작업 큐 등을 제공하는 여러 파이썬 비동기 "
"프레임워크의 기반으로 사용됩니다."

#: ../Doc/library/asyncio.rst:30
msgid ""
"asyncio is often a perfect fit for IO-bound and high-level **structured**"
" network code."
msgstr "asyncio는 종종 IO 병목이면서 고수준의 **구조화된** 네트워크 코드에 가장 적합합니다."

#: ../Doc/library/asyncio.rst:33
msgid "asyncio provides a set of **high-level** APIs to:"
msgstr "asyncio는 다음과 같은 작업을 위한 **고수준** API 집합을 제공합니다:"

#: ../Doc/library/asyncio.rst:35
msgid ""
":ref:`run Python coroutines <coroutine>` concurrently and have full "
"control over their execution;"
msgstr ":ref:`파이썬 코루틴들 <coroutine>`\\을 동시에 실행하고 실행을 완전히 제어할 수 있습니다."

#: ../Doc/library/asyncio.rst:38
msgid "perform :ref:`network IO and IPC <asyncio-streams>`;"
msgstr ":ref:`네트워크 IO와 IPC <asyncio-streams>`\\를 수행합니다;"

#: ../Doc/library/asyncio.rst:40
msgid "control :ref:`subprocesses <asyncio-subprocess>`;"
msgstr ":ref:`자식 프로세스 <asyncio-subprocess>`\\를 제어합니다;"

#: ../Doc/library/asyncio.rst:42
msgid "distribute tasks via :ref:`queues <asyncio-queues>`;"
msgstr ":ref:`큐 <asyncio-queues>`\\를 통해 작업을 분산합니다;"

#: ../Doc/library/asyncio.rst:44
msgid ":ref:`synchronize <asyncio-sync>` concurrent code;"
msgstr "동시성 코드를 :ref:`동기화 <asyncio-sync>`\\합니다;"

#: ../Doc/library/asyncio.rst:46
msgid ""
"Additionally, there are **low-level** APIs for *library and framework "
"developers* to:"
msgstr "또한, *라이브러리와 프레임워크 개발자*\\가 다음과 같은 작업을 할 수 있도록 하는 **저수준** API가 있습니다:"

#: ../Doc/library/asyncio.rst:49
msgid ""
"create and manage :ref:`event loops <asyncio-event-loop>`, which provide "
"asynchronous APIs for :meth:`networking <loop.create_server>`, running "
":meth:`subprocesses <loop.subprocess_exec>`, handling :meth:`OS signals "
"<loop.add_signal_handler>`, etc;"
msgstr ""
":meth:`네트워킹 <loop.create_server>`, :meth:`자식 프로세스 <loop.subprocess_exec>`"
" 실행, :meth:`OS 시그널 <loop.add_signal_handler>` 처리 등의 비동기 API를 제공하는 "
":ref:`이벤트 루프 <asyncio-event-loop>`\\를 만들고 관리합니다."

#: ../Doc/library/asyncio.rst:54
msgid ""
"implement efficient protocols using :ref:`transports <asyncio-transports-"
"protocols>`;"
msgstr ":ref:`트랜스포트 <asyncio-transports-protocols>`\\를 사용하여 효율적인 프로토콜을 구현합니다."

#: ../Doc/library/asyncio.rst:57
msgid ""
":ref:`bridge <asyncio-futures>` callback-based libraries and code with "
"async/await syntax."
msgstr "콜백 기반 라이브러리와 async/await 구문을 사용한 코드 간에 :ref:`다리를 놓습니다 <asyncio-futures>`."

#: ../Doc/library/asyncio.rst:65
msgid "Reference"
msgstr "레퍼런스"

#: ../Doc/library/asyncio.rst:66
msgid "High-level APIs"
msgstr "고수준 API"

#: ../Doc/library/asyncio.rst:77
msgid "Low-level APIs"
msgstr "저수준 API"

#: ../Doc/library/asyncio.rst:87
msgid "Guides and Tutorials"
msgstr "가이드 및 자습서"

