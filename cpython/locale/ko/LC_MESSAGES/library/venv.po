# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-12-25 10:27+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../Doc/library/venv.rst:2
msgid ":mod:`venv` --- Creation of virtual environments"
msgstr ":mod:`venv` --- 가상 환경 생성"

#: ../Doc/library/venv.rst:12
msgid "**Source code:** :source:`Lib/venv/`"
msgstr "**소스 코드:** :source:`Lib/venv/`"

#: ../Doc/library/venv.rst:18
msgid ""
"The :mod:`venv` module provides support for creating lightweight "
"\"virtual environments\" with their own site directories, optionally "
"isolated from system site directories.  Each virtual environment has its "
"own Python binary (which matches the version of the binary that was used "
"to create this environment) and can have its own independent set of "
"installed Python packages in its site directories."
msgstr ""
":mod:`venv` 모듈은 자체 사이트 디렉터리를 갖는 경량 \"가상 환경\"을 만들고, 선택적으로 시스템 사이트 디렉터리에서 "
"격리할 수 있도록 지원합니다. 각 가상 환경은 고유한 파이썬 바이너리(이 환경을 만드는 데 사용된 바이너리 버전과 일치함)를 가지며"
" 자신의 사이트 디렉터리에 독립적으로 설치된 파이썬 패키지 집합을 가질 수 있습니다."

#: ../Doc/library/venv.rst:25
msgid "See :pep:`405` for more information about Python virtual environments."
msgstr "파이썬 가상 환경에 대한 자세한 내용은 :pep:`405`\\를 참조하십시오."

#: ../Doc/library/venv.rst:29
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/installing/#creating-virtual-"
"environments>`__"
msgstr ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/installing/#creating-virtual-"
"environments>`__"

#: ../Doc/library/venv.rst:33
msgid ""
"The ``pyvenv`` script has been deprecated as of Python 3.6 in favor of "
"using ``python3 -m venv`` to help prevent any potential confusion as to "
"which Python interpreter a virtual environment will be based on."
msgstr ""
"``pyvenv`` 스크립트는 파이썬 3.6 에서 폐지되었고, 가상 환경이 어떤 파이썬 인터프리터를 기반으로 하는지에 대한 잠재적인"
" 혼동을 방지하기 위해 ``python3 -m venv``\\를 사용합니다."

#: ../Doc/library/venv.rst:39
msgid "Creating virtual environments"
msgstr "가상 환경 만들기"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:1
#: <included from
msgid ""
"Creation of :ref:`virtual environments <venv-def>` is done by executing "
"the command ``venv``::"
msgstr ":ref:`가상 환경 <venv-def>`\\은 ``venv`` 명령을 실행해서 만들어집니다::"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:6
#: <included from
msgid ""
"Running this command creates the target directory (creating any parent "
"directories that don't exist already) and places a ``pyvenv.cfg`` file in"
" it with a ``home`` key pointing to the Python installation from which "
"the command was run.  It also creates a ``bin`` (or ``Scripts`` on "
"Windows) subdirectory containing a copy/symlink of the Python "
"binary/binaries (as appropriate for the platform or arguments used at "
"environment creation time). It also creates an (initially empty) "
"``lib/pythonX.Y/site-packages`` subdirectory (on Windows, this is ``Lib"
"\\site-packages``). If an existing directory is specified, it will be re-"
"used."
msgstr ""
"이 명령을 실행하면 대상 디렉터리가 만들어지고 (이미 존재하지 않는 부모 디렉터리도 만듭니다) 명령이 실행된 파이썬 설치를 가리키는 "
"``home`` 키가 있는 ``pyvenv.cfg`` 파일이 배치됩니다. 또한 파이썬 바이너리/바이너리들의 사본/심볼릭 링크를 포함하는 "
"``bin`` (또는 윈도우의 경우 ``Scripts``) 서브 디렉터리를 만듭니다 (플랫폼이나 환경 생성 시에 사용된 인자에 "
"적절하게). 또한 (처음에는 비어있는) ``lib/pythonX.Y/site-packages`` (윈도우에서는, ``Lib\\site-"
"packages``) 서브 디렉터리를 만듭니다. 기존 디렉터리가 지정되면 재사용됩니다."

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:16
#: <included from
msgid ""
"``pyvenv`` was the recommended tool for creating virtual environments for"
" Python 3.3 and 3.4, and is `deprecated in Python 3.6 "
"<https://docs.python.org/dev/whatsnew/3.6.html#deprecated-features>`_."
msgstr ""
"``pyvenv``\\는 파이썬 3.3 및 3.4 용 가상 환경을 만드는 데 권장되는 도구였으며, `파이썬 3.6 에서 "
"폐지되었습니다 <https://docs.python.org/dev/whatsnew/3.6.html#deprecated-"
"features>`_."

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:21
#: <included from
msgid "The use of ``venv`` is now recommended for creating virtual environments."
msgstr "이제 가상 환경을 만들 때 ``venv``\\를 사용하는 것이 좋습니다."

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:26
#: <included from
msgid "On Windows, invoke the ``venv`` command as follows::"
msgstr "윈도우에서는, 다음과 같이 ``venv`` 명령을 호출하십시오::"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:30
#: <included from
msgid ""
"Alternatively, if you configured the ``PATH`` and ``PATHEXT`` variables "
"for your :ref:`Python installation <using-on-windows>`::"
msgstr ""
"또는, 여러분의 :ref:`파이썬 설치 <using-on-windows>`\\에 ``PATH`` 와 ``PATHEXT`` 변수를 "
"구성했으면::"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:35
#: <included from
msgid "The command, if run with ``-h``, will show the available options::"
msgstr "명령에 ``-h``\\를 사용하면 사용 가능한 옵션이 표시됩니다::"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:65
#: <included from
msgid ""
"Installs pip by default, added the ``--without-pip``  and ``--copies`` "
"options"
msgstr "기본적으로 pip을 설치합니다. ``--without-pip`` 와 ``--copies`` 옵션을 추가했습니다."

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:69
#: <included from
msgid ""
"In earlier versions, if the target directory already existed, an error "
"was raised, unless the ``--clear`` or ``--upgrade`` option was provided."
msgstr ""
"이전 버전에서는, ``--clear`` 나 ``--upgrade`` 옵션이 제공되지 않았을 때, 대상 디렉터리가 이미 존재하면 "
"에러가 발생했습니다."

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:73
#: <included from
msgid ""
"The created ``pyvenv.cfg`` file also includes the ``include-system-site-"
"packages`` key, set to ``true`` if ``venv`` is run with the ``--system-"
"site-packages`` option, ``false`` otherwise."
msgstr ""
"만들어진 ``pyvenv.cfg`` 파일에는 ``include-system-site-packages`` 키도 포함되어 있으며, "
"``venv``\\가 ``--system-site-packages`` 옵션으로 실행되면 ``true``\\로 설정되고, 그렇지 "
"않으면 ``false``\\로 설정됩니다."

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:77
#: <included from
msgid ""
"Unless the ``--without-pip`` option is given, :mod:`ensurepip` will be "
"invoked to bootstrap ``pip`` into the virtual environment."
msgstr ""
"``--without-pip`` 옵션을 주지 않는 한, 가상 환경으로 ``pip``\\을 부트스트랩 하기 위해 "
":mod:`ensurepip`\\가 호출됩니다."

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:80
#: <included from
msgid ""
"Multiple paths can be given to ``venv``, in which case an identical "
"virtual environment will be created, according to the given options, at "
"each provided path."
msgstr ""
"``venv``\\에 여러 경로를 지정할 수 있습니다. 이때 지정된 옵션에 따라 제공된 각 경로에서 같은 가상 환경이 만들어집니다."

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:84
#: <included from
msgid ""
"Once a virtual environment has been created, it can be \"activated\" "
"using a script in the virtual environment's binary directory. The "
"invocation of the script is platform-specific (`<venv>` must be replaced "
"by the path of the directory containing the virtual environment):"
msgstr ""
"일단 가상 환경이 만들어지면, 가상 환경의 바이너리 디렉터리에 있는 스크립트를 사용하여 \"활성화\"할 수 있습니다. 스크립트의 "
"호출은 플랫폼에 따라 다릅니다 (`<venv>`\\는 가상 환경을 포함하는 디렉터리의 경로로 대체되어야 합니다):"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:90
#: <included from
msgid "Platform"
msgstr "플랫폼"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:90
#: <included from
msgid "Shell"
msgstr "셸"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:90
#: <included from
msgid "Command to activate virtual environment"
msgstr "가상 환경을 활성화하는 명령"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:92
#: <included from
msgid "Posix"
msgstr "Posix"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:92
#: <included from
msgid "bash/zsh"
msgstr "bash/zsh"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:92
#: <included from
msgid "$ source <venv>/bin/activate"
msgstr "$ source <venv>/bin/activate"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:94
#: <included from
msgid "fish"
msgstr "fish"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:94
#: <included from
msgid "$ . <venv>/bin/activate.fish"
msgstr "$ . <venv>/bin/activate.fish"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:96
#: <included from
msgid "csh/tcsh"
msgstr "csh/tcsh"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:96
#: <included from
msgid "$ source <venv>/bin/activate.csh"
msgstr "$ source <venv>/bin/activate.csh"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:98
#: <included from
msgid "Windows"
msgstr "윈도우"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:98
#: <included from
msgid "cmd.exe"
msgstr "cmd.exe"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:98
#: <included from
msgid "C:\\\\> <venv>\\\\Scripts\\\\activate.bat"
msgstr "C:\\\\> <venv>\\\\Scripts\\\\activate.bat"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:100
#: <included from
msgid "PowerShell"
msgstr "PowerShell"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:100
#: <included from
msgid "PS C:\\\\> <venv>\\\\Scripts\\\\Activate.ps1"
msgstr "PS C:\\\\> <venv>\\\\Scripts\\\\Activate.ps1"

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:103
#: <included from
msgid ""
"You don't specifically *need* to activate an environment; activation just"
" prepends the virtual environment's binary directory to your path, so "
"that \"python\" invokes the virtual environment's Python interpreter and "
"you can run installed scripts without having to use their full path. "
"However, all scripts installed in a virtual environment should be "
"runnable without activating it, and run with the virtual environment's "
"Python automatically."
msgstr ""
"환경을 구체적으로 활성화할 *필요*\\는 없습니다; 활성화는 단지 PATH의 처음에 가상 환경의 바이너리 디렉터리를 추가해서, "
"\"python\"이 가상 환경의 파이썬 인터프리터를 호출하고 전체 경로를 사용하지 않고도 설치된 스크립트를 실행할 수 있도록 할 "
"뿐입니다. 그러나, 가상 환경에 설치된 모든 스크립트는 활성화하지 않고도 실행 가능해야 하며, 자동으로 가상 환경의 파이썬을 "
"사용하여 실행해야 합니다."

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:110
#: <included from
msgid ""
"You can deactivate a virtual environment by typing \"deactivate\" in your"
" shell. The exact mechanism is platform-specific: for example, the Bash "
"activation script defines a \"deactivate\" function, whereas on Windows "
"there are separate scripts called ``deactivate.bat`` and "
"``Deactivate.ps1`` which are installed when the virtual environment is "
"created."
msgstr ""
"셸에서 \"deactivate\"를 입력하여 가상 환경을 비활성화할 수 있습니다. 정확한 메커니즘은 플랫폼에 따라 다릅니다: 예를 "
"들어 Bash 활성화 스크립트는 \"deactivate\" 함수를 정의하는 반면, 윈도우에서는 가상 환경이 만들어질 때 설치되는 "
"``deactivate.bat`` 와 ``Deactivate.ps1``\\이라는 별도의 스크립트가 있습니다."

#: ../Doc/using/venv-create.inc
#: /Users/flowdas/works/docsbuild-scripts/cpython/Doc/library/venv.rst>:116
#: <included from
msgid "``fish`` and ``csh`` activation scripts."
msgstr "``fish`` 와 ``csh`` 활성화 스크립트."

#: ../Doc/library/venv.rst:46
msgid ""
"A virtual environment is a Python environment such that the Python "
"interpreter, libraries and scripts installed into it are isolated from "
"those installed in other virtual environments, and (by default) any "
"libraries installed in a \"system\" Python, i.e., one which is installed "
"as part of your operating system."
msgstr ""
"가상 환경은 파이썬 인터프리터, 라이브러리 및 스크립트가 다른 가상 환경에 설치된 것과 (기본적으로) \"시스템\" 파이썬(즉, "
"여러분의 운영 체제 일부로 설치되어있는 것)에 설치된 모든 라이브러리와 격리되어있는 파이썬 환경입니다."

#: ../Doc/library/venv.rst:52
msgid ""
"A virtual environment is a directory tree which contains Python "
"executable files and other files which indicate that it is a virtual "
"environment."
msgstr "가상 환경은 파이썬 실행 파일과 가상 환경임을 나타내는 다른 파일을 포함하는 디렉터리 트리입니다."

#: ../Doc/library/venv.rst:55
msgid ""
"Common installation tools such as ``Setuptools`` and ``pip`` work as "
"expected with virtual environments. In other words, when a virtual "
"environment is active, they install Python packages into the virtual "
"environment without needing to be told to do so explicitly."
msgstr ""
"``Setuptools`` 나 ``pip``\\과 같은 일반적인 설치 도구는 가상 환경에서 예상대로 작동합니다. 즉, 가상 환경이 "
"활성화되면, 명시적으로 그렇게 지정하지 않아도 파이썬 패키지를 가상 환경에 설치합니다."

#: ../Doc/library/venv.rst:60
msgid ""
"When a virtual environment is active (i.e., the virtual environment's "
"Python interpreter is running), the attributes :attr:`sys.prefix` and "
":attr:`sys.exec_prefix` point to the base directory of the virtual "
"environment, whereas :attr:`sys.base_prefix` and "
":attr:`sys.base_exec_prefix` point to the non-virtual environment Python "
"installation which was used to create the virtual environment. If a "
"virtual environment is not active, then :attr:`sys.prefix` is the same as"
" :attr:`sys.base_prefix` and :attr:`sys.exec_prefix` is the same as "
":attr:`sys.base_exec_prefix` (they all point to a non-virtual environment"
" Python installation)."
msgstr ""
"가상 환경이 활성일 때 (즉, 가상 환경의 파이썬 인터프리터가 실행 중일 때), 어트리뷰트 :attr:`sys.prefix` 와 "
":attr:`sys.exec_prefix`\\는 가상 환경의 베이스 디렉터리를 가리키지만, "
":attr:`sys.base_prefix`\\와 :attr:`sys.base_exec_prefix`\\는 가상 환경을 만들 때 "
"사용한 가상이 아닌 환경의 파이썬을 가리킵니다. 가상 환경이 활성화되어 있지 않으면, :attr:`sys.prefix`\\는 "
":attr:`sys.base_prefix`\\와 같고, :attr:`sys.exec_prefix`\\는 "
":attr:`sys.base_exec_prefix`\\와 같습니다 (모두 가상 환경이 아닌 파이썬 설치를 가리킵니다)."

#: ../Doc/library/venv.rst:71
msgid ""
"When a virtual environment is active, any options that change the "
"installation path will be ignored from all distutils configuration files "
"to prevent projects being inadvertently installed outside of the virtual "
"environment."
msgstr ""
"가상 환경이 활성일 때, 설치 경로를 변경하는 모든 옵션이 모든 distutils 구성 파일에서 무시되어, 실수로 가상 환경 외부에"
" 프로젝트가 설치되는 것을 방지합니다."

#: ../Doc/library/venv.rst:76
msgid ""
"When working in a command shell, users can make a virtual environment "
"active by running an ``activate`` script in the virtual environment's "
"executables directory (the precise filename is shell-dependent), which "
"prepends the virtual environment's directory for executables to the "
"``PATH`` environment variable for the running shell. There should be no "
"need in other circumstances to activate a virtual environment—scripts "
"installed into virtual environments have a \"shebang\" line which points "
"to the virtual environment's Python interpreter. This means that the "
"script will run with that interpreter regardless of the value of "
"``PATH``. On Windows, \"shebang\" line processing is supported if you "
"have the Python Launcher for Windows installed (this was added to Python "
"in 3.3 - see :pep:`397` for more details). Thus, double-clicking an "
"installed script in a Windows Explorer window should run the script with "
"the correct interpreter without there needing to be any reference to its "
"virtual environment in ``PATH``."
msgstr ""
"명령 셸에서 작업할 때, 사용자는 가상 환경의 실행 파일 디렉터리(정확한 파일 이름은 셸 종속적입니다)에서 ``activate`` "
"스크립트를 실행하여 가상 환경을 활성화할 수 있습니다. 이 파일은 가상 환경의 실행 파일 디렉터리를 실행 중인 셸의 ``PATH``"
" 환경 변수 앞에 추가합니다. 다른 상황에서는 가상 환경을 활성화할 필요가 없습니다. 가상 환경에 설치된 스크립트에는 가상 환경의 "
"파이썬 인터프리터를 가리키는 \"셔뱅\" 줄이 있습니다. 이는 스크립트가 ``PATH`` 값과 상관없이 해당 인터프리터로 실행됨을 "
"뜻합니다. 윈도우에서는, Python Launcher for Windows를 설치하면 \"셔뱅\" 줄 처리가 지원됩니다 (이것은 "
"파이썬 3.3에 추가되었습니다 - 자세한 내용은 :pep:`397`\\를 참조하십시오). 그래서, 윈도우 탐색기 창에서 설치된 "
"스크립트를 더블 클릭하면 ``PATH``\\에 가상 환경에 대한 참조가 없어도 올바른 인터프리터로 스크립트를 실행하게 됩니다."

#: ../Doc/library/venv.rst:95
msgid "API"
msgstr "API"

#: ../Doc/library/venv.rst:99
msgid ""
"The high-level method described above makes use of a simple API which "
"provides mechanisms for third-party virtual environment creators to "
"customize environment creation according to their needs, the "
":class:`EnvBuilder` class."
msgstr ""
"위에서 설명한 고수준 메서드는 제삼자 가상 환경 작성자가 필요에 따라 환경을 사용자 정의할 수 있는 메커니즘을 제공하는 간단한 "
"API를 사용합니다: :class:`EnvBuilder` 클래스."

#: ../Doc/library/venv.rst:107
msgid ""
"The :class:`EnvBuilder` class accepts the following keyword arguments on "
"instantiation:"
msgstr ":class:`EnvBuilder` 클래스는 인스턴스를 만들 때 다음 키워드 인자를 받아들입니다:"

#: ../Doc/library/venv.rst:110
msgid ""
"``system_site_packages`` -- a Boolean value indicating that the system "
"Python site-packages should be available to the environment (defaults to "
"``False``)."
msgstr ""
"``system_site_packages`` -- 시스템 파이썬 site-packages가 환경에서 사용 가능해야 함을 나타내는 "
"논릿값입니다 (기본값은 ``False``)."

#: ../Doc/library/venv.rst:113
msgid ""
"``clear`` -- a Boolean value which, if true, will delete the contents of "
"any existing target directory, before creating the environment."
msgstr "``clear`` -- 참이면, 환경을 만들기 전에, 대상 디렉터리에 존재하는 내용을 지우도록 하는 논릿값."

#: ../Doc/library/venv.rst:116
msgid ""
"``symlinks`` -- a Boolean value indicating whether to attempt to symlink "
"the Python binary (and any necessary DLLs or other binaries, e.g. "
"``pythonw.exe``), rather than copying."
msgstr ""
"``symlinks`` -- 파이썬 바이너리(및 필요한 DLL이나 다른 바이너리, 예를 들어 ``pythonw.exe``)를 "
"복사하는 대신 심볼릭 링크하려고 시도할지를 나타내는 논릿값입니다."

#: ../Doc/library/venv.rst:120
msgid ""
"``upgrade`` -- a Boolean value which, if true, will upgrade an existing "
"environment with the running Python - for use when that Python has been "
"upgraded in-place (defaults to ``False``)."
msgstr ""
"``upgrade`` -- 참이면 실행 중인 파이썬으로 기존 환경을 업그레이드하도록 하는 논릿값 - 파이썬이 그 자리에서 "
"업그레이드되었을 때 사용됩니다 (기본값은 ``False``)."

#: ../Doc/library/venv.rst:124
msgid ""
"``with_pip`` -- a Boolean value which, if true, ensures pip is installed "
"in the virtual environment. This uses :mod:`ensurepip` with the "
"``--default-pip`` option."
msgstr ""
"``with_pip`` -- 참이면 가상 환경에 pip이 설치되도록 하는 논릿값입니다. ``--default-pip`` 옵션과 함께"
" :mod:`ensurepip`\\를 사용합니다."

#: ../Doc/library/venv.rst:128
msgid ""
"``prompt`` -- a String to be used after virtual environment is activated "
"(defaults to ``None`` which means directory name of the environment would"
" be used)."
msgstr ""
"``prompt`` -- 가상 환경이 활성화된 후 사용할 문자열입니다 (기본값은 환경의 디렉터리 이름이 사용됨을 뜻하는 "
"``None``\\입니다)."

#: ../Doc/library/venv.rst:132 ../Doc/library/venv.rst:243
msgid "Added the ``with_pip`` parameter"
msgstr "``with_pip`` 매개 변수 추가"

#: ../Doc/library/venv.rst:135
msgid "Added the ``prompt`` parameter"
msgstr "``prompt`` 매개 변수 추가"

#: ../Doc/library/venv.rst:138
msgid ""
"Creators of third-party virtual environment tools will be free to use the"
" provided ``EnvBuilder`` class as a base class."
msgstr "제삼자 가상 환경 도구 제작자는 제공된 ``EnvBuilder`` 클래스를 베이스 클래스로 자유롭게 사용할 수 있습니다."

#: ../Doc/library/venv.rst:141
msgid "The returned env-builder is an object which has a method, ``create``:"
msgstr "반환된 객체에는 메서드 ``create``\\가 있습니다:"

#: ../Doc/library/venv.rst:145
msgid ""
"This method takes as required argument the path (absolute or relative to "
"the current directory) of the target directory which is to contain the "
"virtual environment.  The ``create`` method will either create the "
"environment in the specified directory, or raise an appropriate "
"exception."
msgstr ""
"이 메서드는 가상 환경을 담을 대상 디렉터리의 경로(절대 또는 현재 디렉터리에 대한 상대)를 필수 인자로 취합니다. "
"``create`` 메서드는 지정된 디렉터리에 환경을 만들거나 적절한 예외를 발생시킵니다."

#: ../Doc/library/venv.rst:151
msgid ""
"The ``create`` method of the ``EnvBuilder`` class illustrates the hooks "
"available for subclass customization::"
msgstr "``EnvBuilder`` 클래스의 ``create`` 메서드는 서브 클래스가 사용자 정의할 수 있는 훅을 보여줍니다::"

#: ../Doc/library/venv.rst:166
msgid ""
"Each of the methods :meth:`ensure_directories`, "
":meth:`create_configuration`, :meth:`setup_python`, :meth:`setup_scripts`"
" and :meth:`post_setup` can be overridden."
msgstr ""
"메서드 :meth:`ensure_directories`, :meth:`create_configuration`, "
":meth:`setup_python`, :meth:`setup_scripts` 및 :meth:`post_setup` 각각을 재정의할"
" 수 있습니다."

#: ../Doc/library/venv.rst:172
msgid ""
"Creates the environment directory and all necessary directories, and "
"returns a context object.  This is just a holder for attributes (such as "
"paths), for use by the other methods. The directories are allowed to "
"exist already, as long as either ``clear`` or ``upgrade`` were specified "
"to allow operating on an existing environment directory."
msgstr ""
"환경 디렉터리와 필요한 모든 디렉터리를 만들고 문맥 객체를 돌려줍니다. 이것은 다른 메서드에서 사용하기 위한 어트리뷰트(가령 "
"경로)를 담고 있을 뿐입니다. 기존 환경 디렉터리에 작동하도록 ``clear`` 나 ``upgrade``\\가 지정되어있는 한, "
"디렉터리는 이미 존재할 수 있습니다."

#: ../Doc/library/venv.rst:180
msgid "Creates the ``pyvenv.cfg`` configuration file in the environment."
msgstr "환경에 ``pyvenv.cfg`` 구성 파일을 만듭니다."

#: ../Doc/library/venv.rst:184
msgid ""
"Creates a copy of the Python executable in the environment on POSIX "
"systems. If a specific executable ``python3.x`` was used, symlinks to "
"``python`` and ``python3`` will be created pointing to that executable, "
"unless files with those names already exist."
msgstr ""
"POSIX 시스템에서 환경에 파이썬 실행 파일의 복사본을 만듭니다. 특정 실행 파일 ``python3.x``\\가 사용되면, 해당 이름의"
" 파일이 이미 존재하지 않는 한 ``python`` 과 ``python3`` 심볼릭 링크가 해당 실행 파일을 가리키도록 만들어집니다."

#: ../Doc/library/venv.rst:191
msgid ""
"Installs activation scripts appropriate to the platform into the virtual "
"environment. On Windows, also installs the ``python[w].exe`` scripts."
msgstr ""
"플랫폼에 적합한 활성화 스크립트를 가상 환경에 설치합니다. 윈도우에서는, ``python[w].exe`` 스크립트도 설치합니다."

#: ../Doc/library/venv.rst:196
msgid ""
"A placeholder method which can be overridden in third party "
"implementations to pre-install packages in the virtual environment or "
"perform other post-creation steps."
msgstr "제삼자 구현에서 재정의하여 가상 환경에 패키지를 사전 설치하거나 다른 생성 후 단계를 수행할 수 있는 메서드입니다."

#: ../Doc/library/venv.rst:200
msgid ""
"Windows now uses redirector scripts for ``python[w].exe`` instead of "
"copying the actual binaries, and so :meth:`setup_python` does nothing "
"unless running from a build in the source tree."
msgstr ""
"윈도우는 이제 실제 바이너리를 복사하는 대신 ``python[w].exe``\\를 위한 리디렉터 스크립트를 사용하므로, 소스 트리의 "
"빌드에서 실행하지 않는 한 :meth:`setup_python`\\ 아무 작업도 수행하지 않습니다."

#: ../Doc/library/venv.rst:205
msgid ""
"In addition, :class:`EnvBuilder` provides this utility method that can be"
" called from :meth:`setup_scripts` or :meth:`post_setup` in subclasses to"
" assist in installing custom scripts into the virtual environment."
msgstr ""
"또한, :class:`EnvBuilder`\\는 가상 환경에 사용자 정의 스크립트를 설치하는 데 도움이 되는 유틸리티 메서드를 "
"제공하는데, 서브 클래스의 :meth:`setup_scripts` 나 :meth:`post_setup`\\에서 호출할 수 있습니다."

#: ../Doc/library/venv.rst:211
msgid ""
"*path* is the path to a directory that should contain subdirectories "
"\"common\", \"posix\", \"nt\", each containing scripts destined for the "
"bin directory in the environment.  The contents of \"common\" and the "
"directory corresponding to :data:`os.name` are copied after some text "
"replacement of placeholders:"
msgstr ""
"*path*\\는 \"common\", \"posix\", \"nt\" 서브 디렉터리를 포함해야 하는 디렉터리 경로입니다. 각 "
"디렉터리에는 환경의 bin 디렉터리로 들어갈 스크립트가 들어 있습니다. \"common\"과 :data:`os.name`\\에 "
"해당하는 디렉터리의 내용은 자리 표시자의 일부 텍스트 치환 후 복사됩니다:"

#: ../Doc/library/venv.rst:217
msgid ""
"``__VENV_DIR__`` is replaced with the absolute path of the environment "
"directory."
msgstr "``__VENV_DIR__``\\은 환경 디렉터리의 절대 경로로 치환됩니다."

#: ../Doc/library/venv.rst:220
msgid ""
"``__VENV_NAME__`` is replaced with the environment name (final path "
"segment of environment directory)."
msgstr "``__VENV_NAME__``\\은 환경 이름(환경 디렉터리의 최종 경로 세그먼트)으로 치환됩니다."

#: ../Doc/library/venv.rst:223
msgid ""
"``__VENV_PROMPT__`` is replaced with the prompt (the environment name "
"surrounded by parentheses and with a following space)"
msgstr "``__VENV_PROMPT__``\\는 프롬프트(괄호로 묶인 환경 이름과 그 뒤의 스페이스)로 치환됩니다"

#: ../Doc/library/venv.rst:226
msgid ""
"``__VENV_BIN_NAME__`` is replaced with the name of the bin directory "
"(either ``bin`` or ``Scripts``)."
msgstr "``__VENV_BIN_NAME__``\\은 bin 디렉터리의 이름(``bin`` 이나 ``Scripts``)으로 치환됩니다."

#: ../Doc/library/venv.rst:229
msgid ""
"``__VENV_PYTHON__`` is replaced with the absolute path of the "
"environment's executable."
msgstr "``__VENV_PYTHON__``\\은 환경의 실행 파일의 절대 경로로 치환됩니다."

#: ../Doc/library/venv.rst:232
msgid ""
"The directories are allowed to exist (for when an existing environment is"
" being upgraded)."
msgstr "디렉터리는 존재하는 것이 허용됩니다 (기존 환경이 업그레이드될 때)."

#: ../Doc/library/venv.rst:235
msgid "There is also a module-level convenience function:"
msgstr "모듈 수준의 편리 함수도 있습니다:"

#: ../Doc/library/venv.rst:240
msgid ""
"Create an :class:`EnvBuilder` with the given keyword arguments, and call "
"its :meth:`~EnvBuilder.create` method with the *env_dir* argument."
msgstr ""
"주어진 키워드 인자로 :class:`EnvBuilder`\\를 만들고, *env_dir* 인자로 "
":meth:`~EnvBuilder.create` 메서드를 호출합니다."

#: ../Doc/library/venv.rst:247
msgid "An example of extending ``EnvBuilder``"
msgstr "``EnvBuilder`` 확장 예제"

#: ../Doc/library/venv.rst:249
msgid ""
"The following script shows how to extend :class:`EnvBuilder` by "
"implementing a subclass which installs setuptools and pip into a created "
"virtual environment::"
msgstr ""
"다음 스크립트는 생성된 가상 환경에 setuptools 와 pip을 설치하는 서브 클래스를 구현하여 "
":class:`EnvBuilder`\\를 확장하는 방법을 보여줍니다::"

#: ../Doc/library/venv.rst:468
msgid ""
"This script is also available for download `online "
"<https://gist.github.com/vsajip/4673395>`_."
msgstr ""
"이 스크립트는 `온라인 <https://gist.github.com/vsajip/4673395>`_\\에서 내려받을 수도 있습니다."
