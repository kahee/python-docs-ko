# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-26 18:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../Doc/c-api/float.rst:6
msgid "Floating Point Objects"
msgstr "부동 소수점 객체"

#: ../Doc/c-api/float.rst:13
msgid ""
"This subtype of :c:type:`PyObject` represents a Python floating point "
"object."
msgstr "이 :c:type:`PyObject`\\의 서브 형은 파이썬 부동 소수점 객체를 나타냅니다."

#: ../Doc/c-api/float.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python floating "
"point type.  This is the same object as :class:`float` in the Python "
"layer."
msgstr ""
"이 :c:type:`PyTypeObject` 인스턴스는 파이썬 부동 소수점 형을 나타냅니다. 이것은 파이썬 계층에서 "
":class:`float`\\와 같은 객체입니다."

#: ../Doc/c-api/float.rst:24
msgid ""
"Return true if its argument is a :c:type:`PyFloatObject` or a subtype of "
":c:type:`PyFloatObject`."
msgstr ""
"인자가 :c:type:`PyFloatObject` 나 :c:type:`PyFloatObject`\\의 서브 형이면 참을 반환합니다."

#: ../Doc/c-api/float.rst:30
msgid ""
"Return true if its argument is a :c:type:`PyFloatObject`, but not a "
"subtype of :c:type:`PyFloatObject`."
msgstr ""
"인자가 :c:type:`PyFloatObject`\\이지만 :c:type:`PyFloatObject`\\의 서브 형은 아니면 참을 "
"반환합니다."

#: ../Doc/c-api/float.rst:36
msgid ""
"Create a :c:type:`PyFloatObject` object based on the string value in "
"*str*, or *NULL* on failure."
msgstr "*str*\\의 문자열 값을 기반으로 :c:type:`PyFloatObject` 객체를 만들거나, 실패하면 *NULL*."

#: ../Doc/c-api/float.rst:42
msgid "Create a :c:type:`PyFloatObject` object from *v*, or *NULL* on failure."
msgstr "*v*\\로부터 :c:type:`PyFloatObject` 객체를 만들거나, 실패하면 *NULL*."

#: ../Doc/c-api/float.rst:47
msgid ""
"Return a C :c:type:`double` representation of the contents of *pyfloat*."
"  If *pyfloat* is not a Python floating point object but has a "
":meth:`__float__` method, this method will first be called to convert "
"*pyfloat* into a float. This method returns ``-1.0`` upon failure, so one"
" should call :c:func:`PyErr_Occurred` to check for errors."
msgstr ""
"*pyfloat* 의 내용의 C :c:type:`double` 표현을 반환합니다. *pyfloat*\\가 파이썬 부동 소수점 객체가 "
"아니지만 :meth:`__float__` 메서드가 있으면, *pyfloat*\\를 float로 변환하기 위해 이 메서드가 먼저 "
"호출됩니다. 이 메서드는 실패하면 ``-1.0``\\을 반환하므로, :c:func:`PyErr_Occurred`\\를 호출하여 에러를 "
"확인해야 합니다."

#: ../Doc/c-api/float.rst:56
msgid ""
"Return a C :c:type:`double` representation of the contents of *pyfloat*, "
"but without error checking."
msgstr "에러 검사 없이 *pyfloat* 의 내용의 C :c:type:`double` 표현을 반환합니다."

#: ../Doc/c-api/float.rst:62
msgid ""
"Return a structseq instance which contains information about the "
"precision, minimum and maximum values of a float. It's a thin wrapper "
"around the header file :file:`float.h`."
msgstr ""
"float의 정밀도, 최솟값, 최댓값에 관한 정보를 포함한 structseq 인스턴스를 돌려줍니다. 헤더 파일 "
":file:`float.h`\\를 감싸는 얇은 래퍼입니다."

#: ../Doc/c-api/float.rst:69
msgid ""
"Return the maximum representable finite float *DBL_MAX* as C "
":c:type:`double`."
msgstr "최대 표현 가능한 유한 float *DBL_MAX*\\를 C :c:type:`double`\\로 반환합니다."

#: ../Doc/c-api/float.rst:74
msgid ""
"Return the minimum normalized positive float *DBL_MIN* as C "
":c:type:`double`."
msgstr "최소 정규화된(normalized) 양의 float *DBL_MIN*\\를 C :c:type:`double`\\로 반환합니다."

#: ../Doc/c-api/float.rst:78
msgid ""
"Clear the float free list. Return the number of items that could not be "
"freed."
msgstr "float 자유 목록(free list)을 비웁니다. 해제할 수 없는 항목의 수를 반환합니다."
